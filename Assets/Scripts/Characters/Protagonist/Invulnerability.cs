using UnityEngine;
using UnityEngine.Serialization;

namespace Characters.Protagonist
{
    [RequireComponent(typeof(NearbyEnemies))]
    [RequireComponent(typeof(CharacterController))]
    public class Invulnerability : MonoBehaviour
    {
        [SerializeField, Min(1)] private float _duration = 3f;
        [SerializeField] private SkinnedMeshRenderer _mesh;
        [FormerlySerializedAs("_speed")] [SerializeField] private float _transparencyLoopSpeed = 5f;
        [SerializeField] private string _transparencyParameter;
        [SerializeField, Range(0,1)] private float _maxTransparency = 0.3f;
        [SerializeField] private float _initialTransparency;
        private float _elapsedTime;
        private NearbyEnemies _nearbyEnemies;
        private bool _isActive = false;

        private Material[] _materials;
        private void Awake()
        {
            _nearbyEnemies = GetComponent<NearbyEnemies>();

        }

        private void Start()
        {
            _materials = _mesh.materials;
        }

        private void Update()
        {
            if (!_isActive) return;

            _elapsedTime += Time.deltaTime;

            LoopTransparency();
            
            if (_elapsedTime >= _duration)
                SetActivate(false);
        }

        private void LoopTransparency()
        {
            //From: https://answers.unity.com/questions/661605/need-help-making-infinite-loop-for-color-changing.html
            var time = (Mathf.Sin(Time.time * _transparencyLoopSpeed) + 1f) / 2.0f;
            var value = Mathf.Lerp(_initialTransparency, _maxTransparency, time);
            SetMaterialsTransparency(value);
        }

        public void SetActivate(bool result)
        {
            _nearbyEnemies.SetActive(!result);
            //_characterController.detectCollisions = !result; //TODO Why it doesnt work????
            Physics.IgnoreLayerCollision(gameObject.layer,GetMaskLayer(_nearbyEnemies.EnemiesLayer), result);
            _elapsedTime = 0f;
            SetMaterialsTransparency(_initialTransparency);
            _isActive = result;
        }
        
        int GetMaskLayer(int layerMask)
        {
            //from: https://www.reddit.com/r/Unity3D/comments/p3pl71/a_game_object_can_only_be_in_one_layer_the_layer/h8w43j2/
            for (int i = 0; i < 32; i++)
            {
                int value = 1 << i;

                if ((layerMask & value) == value)
                    return i;
            }

            return 0;
        }

        private void SetMaterialsTransparency(float value)
        {
            foreach (var material in _materials)
            {
                material.SetFloat(_transparencyParameter, value);
            }
        }
    }
}
